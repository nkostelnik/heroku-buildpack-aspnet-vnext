#!/usr/bin/env bash

set -e

# bin/compile <build-dir> <cache-dir>
build_dir=$1
cache_dir=$2

$build_dir/deploy/kbuild $build_dir $cache_dir

# 1. Install Mono >= 3.4.1 (3.8.0 recommended)
########## https://github.com/friism/heroku-buildpack-mono/blob/master/bin/compile
DEPENDENCY_S3_BUCKET_PATH="http://s3.amazonaws.com/mono-dependencies"
MONO_VERSION="3.10.0"
STACK="cedar-14"

function conditional_download() {
  DOWNLOAD_URL="$1"
  DESTINATION="$2"

  if [ ! -d ${DESTINATION} ]; then
    rm -rf ${DESTINATION}
    mkdir -p ${DESTINATION}
    echo "-----> Downloading ${DOWNLOAD_URL}"
    curl ${DOWNLOAD_URL} -s | tar xz -C ${DESTINATION}
  fi
}

LP_DIR=`cd $(dirname $0); cd ..; pwd`

echo "-----> LP_DIR:"
echo "       $LP_DIR"

cd ${build_dir}
mkdir -p ${cache_dir}

MONO_CACHE_LOCATION=${cache_dir}/${STACK}/mono-${MONO_VERSION}
conditional_download ${DEPENDENCY_S3_BUCKET_PATH}/${STACK}/mono-${MONO_VERSION}.tar.gz ${MONO_CACHE_LOCATION}

cp -r "${MONO_CACHE_LOCATION}/mono" .

ln -s "$build_dir/mono" /app

export PATH="/app/mono/bin:${PATH}"
export LD_LIBRARY_PATH="/app/mono/lib:${LD_LIBRARY_PATH}"

cp -rf ${LP_DIR}/profile.d ${build_dir}/.profile.d

echo "-----> MONO VERSION:"
mono --version

echo "-----> Updating SSL certificates..."
mozroots --import --sync
yes | certmgr -ssl "https://www.myget.org"
yes | certmgr -ssl "https://www.nuget.org"


# 2. Install KVM
echo "-----> Install KVM..."

export KRE_USER_HOME="$build_dir/.k"
curl -sSL https://raw.githubusercontent.com/aspnet/Home/master/kvminstall.sh | sh
ln -s "$KRE_USER_HOME" /app
source "$KRE_USER_HOME/kvm/kvm.sh"


# 3. Install KRE
echo "-----> Install KRE..."
kvm upgrade

# 3.1 Restore project packages...
echo "-----> Restore project packages..."
kpm restore

# 4. Prepare Procfile

if [ ! -r $build_dir/Procfile ]; then
    echo "       No Procfile; using \"web: k kestrel --server.urls http://0.0.0.0:80\"."
    echo "web: k kestrel --server.urls http://0.0.0.0:80" > $build_dir/Procfile
fi

echo "-----> Build SUCCESS"